pipeline { 
    agent any 
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select action: apply or destroy')
    }
    stages { 
        stage('git checkout') { 
          steps {  
            checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/HarshitSingh-Codes/jenkins-terraform.git']])            } 
        } 
        stage('terraform init'){ 
            steps { 
                sh 'terraform init'  
            } 
        } 
        stage('terraform plan'){ 
            steps { 
                sh 'terraform plan'  
            } 
        }
        stage('apply Approval'){ 
            when {
                expression { params.ACTION == 'apply' }
            }
            steps { 
                input message: 'Do you want to apply the plan?', ok: 'Yes' 
            } 
        } 
        stage('terraform apply'){
            when {
                expression { params.ACTION == 'apply' }
            } 
            steps { 
                sh 'terraform apply --auto-approve' 
                sh 'terraform output ' 
                
            } 
        }
        stage('storing efs dns name'){
             environment {
                    EFS_DNS_NAME = """${sh(
                    returnStdout: true,
                    script: 'terraform output -raw efs_dns_name').trim()}""" 
                }
                steps{
                    sh 'printenv'
                }
        }
        stage('destroy Approval'){ 
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps { 
                input message: 'Do you want to destroy the applied infra?', ok: 'Yes' 
            } 
        } 
        stage('terraform destroy'){ 
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps { 
                // sh 'terraform init'
                sh 'terraform destroy --auto-approve'  
            } 
        }
    } 
}